// Mocks generated by Mockito 5.2.0 from annotations
// in homsai/test/integration/add_plant/retrieve_configuration/retrieve_configuration_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:homsai/crossconcern/helpers/blocs/websocket/websocket.bloc.dart'
    as _i3;
import 'package:homsai/datastore/DTOs/websocket/configuration/configuration_body.dto.dart'
    as _i7;
import 'package:homsai/datastore/DTOs/websocket/device_related/device_related_body.dto.dart'
    as _i8;
import 'package:homsai/datastore/DTOs/websocket/service/service_body.dto.dart'
    as _i6;
import 'package:homsai/datastore/DTOs/websocket/trigger/trigger_body.dto.dart'
    as _i5;
import 'package:homsai/datastore/remote/websocket/home_assistant_websocket.interface.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [HomeAssistantWebSocketInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeAssistantWebSocketInterface extends _i1.Mock
    implements _i2.HomeAssistantWebSocketInterface {
  MockHomeAssistantWebSocketInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected), returnValue: false)
          as bool);
  @override
  bool get isConnecting =>
      (super.noSuchMethod(Invocation.getter(#isConnecting), returnValue: false)
          as bool);
  @override
  _i3.HomeAssistantWebSocketStatus get status =>
      (super.noSuchMethod(Invocation.getter(#status),
              returnValue: _i3.HomeAssistantWebSocketStatus.disconnected)
          as _i3.HomeAssistantWebSocketStatus);
  @override
  _i4.Future<void> connect(
          {Uri? baseUrl, Uri? fallback, Function? onConnected}) =>
      (super.noSuchMethod(
          Invocation.method(#connect, [], {
            #baseUrl: baseUrl,
            #fallback: fallback,
            #onConnected: onConnected
          }),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> reconnect({Function? onConnected}) => (super.noSuchMethod(
      Invocation.method(#reconnect, [], {#onConnected: onConnected}),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  void removeSubscription(
          String? event, _i2.WebSocketSubscriberInterface? subscriber) =>
      super.noSuchMethod(
          Invocation.method(#removeSubscription, [event, subscriber]),
          returnValueForMissingStub: null);
  @override
  void subscribeEvent(
          String? event, _i2.WebSocketSubscriberInterface? subscriber) =>
      super.noSuchMethod(
          Invocation.method(#subscribeEvent, [event, subscriber]),
          returnValueForMissingStub: null);
  @override
  void subscribeTrigger(
          String? event,
          _i2.WebSocketSubscriberInterface? subscriber,
          _i5.TriggerBodyDto? trigger) =>
      super.noSuchMethod(
          Invocation.method(#subscribeTrigger, [event, subscriber, trigger]),
          returnValueForMissingStub: null);
  @override
  void unsubscribingFromEvents(
          String? event, _i2.WebSocketSubscriberInterface? subscriber) =>
      super.noSuchMethod(
          Invocation.method(#unsubscribingFromEvents, [event, subscriber]),
          returnValueForMissingStub: null);
  @override
  void fireAnEvent(
          _i2.WebSocketSubscriberInterface? subscriber, String? eventType,
          {Map<String, String>? eventData}) =>
      super.noSuchMethod(
          Invocation.method(
              #fireAnEvent, [subscriber, eventType], {#eventData: eventData}),
          returnValueForMissingStub: null);
  @override
  void callingAService(
          _i2.WebSocketSubscriberInterface? subscriber,
          String? domain,
          String? service,
          _i6.ServiceBodyDto? serviceBodyDto) =>
      super.noSuchMethod(
          Invocation.method(
              #callingAService, [subscriber, domain, service, serviceBodyDto]),
          returnValueForMissingStub: null);
  @override
  void fetchingStates(_i2.WebSocketSubscriberInterface? subscriber) =>
      super.noSuchMethod(Invocation.method(#fetchingStates, [subscriber]),
          returnValueForMissingStub: null);
  @override
  void fetchingConfig(_i2.WebSocketSubscriberInterface? subscriber) =>
      super.noSuchMethod(Invocation.method(#fetchingConfig, [subscriber]),
          returnValueForMissingStub: null);
  @override
  void fetchingServices(_i2.WebSocketSubscriberInterface? subscriber) =>
      super.noSuchMethod(Invocation.method(#fetchingServices, [subscriber]),
          returnValueForMissingStub: null);
  @override
  void fetchingMediaPlayerThumbnails(
          _i2.WebSocketSubscriberInterface? subscriber, String? entityId) =>
      super.noSuchMethod(
          Invocation.method(
              #fetchingMediaPlayerThumbnails, [subscriber, entityId]),
          returnValueForMissingStub: null);
  @override
  void validateConfig(_i2.WebSocketSubscriberInterface? subscriber,
          String? entityId, _i7.ConfigurationBodyDto? configurationBodyDto) =>
      super.noSuchMethod(
          Invocation.method(
              #validateConfig, [subscriber, entityId, configurationBodyDto]),
          returnValueForMissingStub: null);
  @override
  void getDeviceList(_i2.WebSocketSubscriberInterface? subscriber) =>
      super.noSuchMethod(Invocation.method(#getDeviceList, [subscriber]),
          returnValueForMissingStub: null);
  @override
  void getAreaList(_i2.WebSocketSubscriberInterface? subscriber) =>
      super.noSuchMethod(Invocation.method(#getAreaList, [subscriber]),
          returnValueForMissingStub: null);
  @override
  void getDeviceRelated(_i2.WebSocketSubscriberInterface? subscriber,
          _i8.DeviceRelatedBodyDto? deviceRelatedBodyDto) =>
      super.noSuchMethod(
          Invocation.method(
              #getDeviceRelated, [subscriber, deviceRelatedBodyDto]),
          returnValueForMissingStub: null);
}
