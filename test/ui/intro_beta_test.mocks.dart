// Mocks generated by Mockito 5.2.0 from annotations
// in homsai/test/ui/login_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:homsai/business/ai_service/ai_service.repository.dart' as _i6;
import 'package:homsai/datastore/DTOs/remote/ai_service/daily_plan/daily_plan.dto.dart'
    as _i4;
import 'package:homsai/datastore/DTOs/remote/ai_service/daily_plan/daily_plan_body.dto.dart'
    as _i11;
import 'package:homsai/datastore/DTOs/remote/ai_service/forecast/consumption_optimizations/consumption_optimizations_forecast.dto.dart'
    as _i3;
import 'package:homsai/datastore/DTOs/remote/ai_service/forecast/consumption_optimizations/consumption_optimizations_forecast_body.dto.dart'
    as _i10;
import 'package:homsai/datastore/DTOs/remote/ai_service/forecast/photovoltaic/photovoltaic.dto.dart'
    as _i12;
import 'package:homsai/datastore/DTOs/remote/ai_service/forecast/photovoltaic/photovoltaic_body.dto.dart'
    as _i13;
import 'package:homsai/datastore/DTOs/remote/ai_service/forecast/suggestions_chart/suggestions_chart.dto.dart'
    as _i5;
import 'package:homsai/datastore/DTOs/remote/ai_service/login/login_body.dto.dart'
    as _i9;
import 'package:homsai/datastore/models/ai_service_auth.model.dart' as _i8;
import 'package:homsai/datastore/remote/rest/remote.Interface.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeRemoteInterface_0 extends _i1.Fake implements _i2.RemoteInterface {}

class _FakeConsumptionOptimizationsForecastDto_1 extends _i1.Fake
    implements _i3.ConsumptionOptimizationsForecastDto {}

class _FakeDailyPlanDto_2 extends _i1.Fake implements _i4.DailyPlanDto {}

class _FakeSuggestionsChartDto_3 extends _i1.Fake
    implements _i5.SuggestionsChartDto {}

/// A class which mocks [AIServiceRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAIServiceRepository extends _i1.Mock
    implements _i6.AIServiceRepository {
  MockAIServiceRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RemoteInterface get remoteInterface =>
      (super.noSuchMethod(Invocation.getter(#remoteInterface),
          returnValue: _FakeRemoteInterface_0()) as _i2.RemoteInterface);
  @override
  _i7.Future<_i8.AiServiceAuth?> getToken(_i9.LoginBodyDto? loginBodyDto) =>
      (super.noSuchMethod(Invocation.method(#getToken, [loginBodyDto]),
              returnValue: Future<_i8.AiServiceAuth?>.value())
          as _i7.Future<_i8.AiServiceAuth?>);
  @override
  _i7.Future<_i8.AiServiceAuth?> refreshToken(
          _i8.AiServiceAuth? aiServiceAuth) =>
      (super.noSuchMethod(Invocation.method(#refreshToken, [aiServiceAuth]),
              returnValue: Future<_i8.AiServiceAuth?>.value())
          as _i7.Future<_i8.AiServiceAuth?>);
  @override
  _i7.Future<_i3.ConsumptionOptimizationsForecastDto>
      getPhotovoltaicSelfConsumptionOptimizerForecast(
              _i10.ConsumptionOptimizationsForecastBodyDto?
                  optimizationsForecastBody,
              String? unit) =>
          (super.noSuchMethod(
              Invocation.method(
                  #getPhotovoltaicSelfConsumptionOptimizerForecast,
                  [optimizationsForecastBody, unit]),
              returnValue: Future<_i3.ConsumptionOptimizationsForecastDto>.value(
                  _FakeConsumptionOptimizationsForecastDto_1())) as _i7
              .Future<_i3.ConsumptionOptimizationsForecastDto>);
  @override
  _i7.Future<dynamic> subscribeToBeta(_i9.LoginBodyDto? loginBodyDto) =>
      (super.noSuchMethod(Invocation.method(#subscribeToBeta, [loginBodyDto]),
          returnValue: Future<dynamic>.value()) as _i7.Future<dynamic>);
  @override
  _i7.Future<_i4.DailyPlanDto> getDailyPlan(
          _i11.DailyPlanBodyDto? dailyPlanBodyDto,
          int? deviceNumber,
          List<String>? entitysType) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getDailyPlan, [dailyPlanBodyDto, deviceNumber, entitysType]),
              returnValue:
                  Future<_i4.DailyPlanDto>.value(_FakeDailyPlanDto_2()))
          as _i7.Future<_i4.DailyPlanDto>);
  @override
  _i7.Future<List<_i12.PhotovoltaicForecastDto>> getPhotovoltaicForecast(
          _i13.PhotovoltaicForecastBodyDto? dailyPlanBodyDto) =>
      (super.noSuchMethod(
              Invocation.method(#getPhotovoltaicForecast, [dailyPlanBodyDto]),
              returnValue: Future<List<_i12.PhotovoltaicForecastDto>>.value(
                  <_i12.PhotovoltaicForecastDto>[]))
          as _i7.Future<List<_i12.PhotovoltaicForecastDto>>);
  @override
  _i7.Future<_i5.SuggestionsChartDto> getSuggestionsChart() =>
      (super.noSuchMethod(Invocation.method(#getSuggestionsChart, []),
              returnValue: Future<_i5.SuggestionsChartDto>.value(
                  _FakeSuggestionsChartDto_3()))
          as _i7.Future<_i5.SuggestionsChartDto>);
}
